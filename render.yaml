services:
  - type: web
    name: gohire-frontend
    env: docker
    plan: free
    dockerfilePath: ./frontend/Dockerfile
    dockerContext: ./frontend
    buildCommand: ""
    startCommand: ""
    envVars:
      - key: PORT
        value: 80

  - type: web
    name: gohire-auth-service
    env: docker
    plan: free
    dockerfilePath: ./auth-service/Dockerfile
    dockerContext: ./auth-service
    buildCommand: ""
    startCommand: ""
    envVars:
      - key: SPRING_DATA_MONGODB_URI
        value: mongodb+srv://mohdsaif9990197398:saifatlas@cluster0.xr5no1u.mongodb.net/job-db?retryWrites=true&w=majority&appName=Cluster0
      - key: PORT
        value: 8080

  # - type: web
  #   name: gohire-job-service
  #   env: docker
  #   plan: free
  #   dockerfilePath: ./job-service/Dockerfile
  #   buildCommand: ""
  #   startCommand: ""
  #   envVars:
  #     - key: SPRING_DATA_MONGODB_URI
  #       value: mongodb+srv://mohdsaif9990197398:saifatlas@cluster0.xr5no1u.mongodb.net/job-db?retryWrites=true&w=majority&appName=Cluster0
  #     - key: REDIS_HOST
  #       value: gohire-redis
  #     - key: REDIS_PORT
  #       value: "6379"
  #     - key: PORT
  #       value: 8083
  - type: web
    name: gohire-ml-service
    env: docker
    plan: free
    dockerfilePath: ./ml-service/Dockerfile
    dockerContext: ./ml-service
    buildCommand: ""
    startCommand: ""
    envVars:
      - key: PORT
        value: 8000


  - type: redis
    name: gohire-redis
    plan: free
    ipAllowList:
      - source: 0.0.0.0/0
        description: Allow all for development
